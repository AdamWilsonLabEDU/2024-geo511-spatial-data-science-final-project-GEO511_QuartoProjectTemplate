---
title: "My Final Project Template"
author: Your name here
subtitle: Subtitle here if desired
date: today
date-format: long
---

# Introduction

#Hurricane Milton was a very unusually hurricane in the path it took throughout the Gulf of Mexico, 
#through Florida, and then through the Atlantic when compared to other hurricanes during 2024, 
#with hurricane Helene also being an odd hurricane in the path it took through the continental United States as well. 
#Because of the abnormalities of Milton, I intend to analyze the track of Hurricane Milton through the Gulf of Mexico in comparison to other hurricanes and tropical storm that occurred in the Gulf of Mexico, 
#and via the storm tracks and storm events such as rain and wind measurements of hurricanes from the past 20+ years. 
#In order of doing this, I will be referring to different hurricane records taken from NOAA’s Historical Hurricanes and Tropical systems webpage, 
#the CRAN Hurricane Exposure package and NOAA’s Historical Hurricane Tracks webpage, along with the in class lab’s data set
#from NOAA's international-best-track-archive-for-climate-stewardship-ibtracs, 
#as one of the beast means of analysis for the possible changes in strength of hurricane Milton when compared to these other hurricanes. 
#With this, I will also be referring to the Intergovernmental Panel on Climate Change (IPCC) 2022 Sixth Assessment Report to make assessments of the possible strength future hurricanes and tropical storms may have,
#based on projections about climate change that are listed within the report.

# Materials and methods

\[\~ 200 words\]

Narrative: Clear narrative description of the data sources and methods. Includes data from at least two sources that were integrated / merged in R.

Code: The code associated with the project is well organized and easy to follow. Demonstrates mastery of R graphics and functions.

Data: The underlying data are publicly accessible via the web and downloaded/accessed within the Rmd script. If you want to use your own data, you must make it available on a website (e.g. Figshare) so that others are able to re-run your code.

You can do bullets like this:

-   The first most important thing
-   The second most important thing
-   The third most important thing

You can do numbers like this:

1.  The first most important thing
2.  The second most important thing
3.  The third most important thing

See <http://rmarkdown.rstudio.com/> for all the amazing things you can do.

Here's my first code chunk.

```{r}
x=3+4
```

Refer to output in your narrative like this: x=`r x` .

Load any required packages in a code chunk (you may need to install some packages):

```{r, message=F, warning=F}
library(tidyverse)
library(leaflet)
library(kableExtra)
library(htmlwidgets)
library(widgetframe)
knitr::opts_chunk$set(widgetframe_widgets_dir = 'widgets' ) 
knitr::opts_chunk$set(cache=TRUE)  # cache the results for quick compiling
```

## Download and clean all required data

#SCRIPT

library(drat)
addRepo("geanders")
install.packages("hurricaneexposure") 
install.packages("hurricaneexposuredata")

library(sf)
library(tidyverse)
library(ggmap)
library(spData)
library(lubridate)
library(hurricaneexposure)
library(hurricaneexposuredata)
data(world)
data(us_states)

# Download a csv from noaa with storm track information
dataurl="https://www.ncei.noaa.gov/data/international-best-track-archive-for-climate-stewardship-ibtracs/v04r01/access/csv/ibtracs.NA.list.v04r01.csv"

storm_data <- read_csv(dataurl)

storm_data_new <- storm_data%>%
  mutate(year = year(ISO_TIME))%>%
  filter(year >= 2000) %>%
  mutate_if(is.numeric, function(x) ifelse(x==-999.0,NA,x)) %>%
  mutate(decade=(floor(year/10)*10))


sf_storm_data <- storm_data_new %>%
  st_as_sf(coords=c("LON","LAT"),crs=4326, remove = FALSE)

region <- st_bbox(sf_storm_data)

ggplot(data = world)+
  geom_sf()+
  stat_bin2d(data=storm_data_new, aes(y=st_coordinates(sf_storm_data)[,2], x=st_coordinates(sf_storm_data)[,1]),bins=100)+
  facet_wrap(~decade)+
  scale_fill_distiller(palette="YlOrRd", trans="log", direction=-1, breaks = c(1,10,100,1000))+
  coord_sf(ylim=region[c(2,4)], xlim=region[c(1,3)])

#26055, 26109
Milton_storm <- storm_data_new %>%
  mutate(year = year(ISO_TIME))%>%
  filter(year == 2024)%>%
  filter(NUMBER == 71)


Milton_storm_data <- Milton_storm %>%
  st_as_sf(coords=c("LON","LAT"),crs=4326, remove = FALSE)

region <- st_bbox(Milton_storm_data)

ggplot(data = world)+
  geom_sf() + 
  stat_bin2d(data=Milton_storm_data, aes(y=st_coordinates(Milton_storm_data)[,2], 
  x=st_coordinates(Milton_storm_data)[,1]),bins=100)+
  scale_fill_distiller(palette="YlOrRd", 
  trans="log", direction=-1, breaks = c(1,10,100,1000))+
  coord_sf(ylim=region[c(2,4)], xlim=region[c(1,3)])






#install both "hurricaneexposure" &"hurricaneexposuredata" packages for the functions to run
data("hurr_tracks")
head(hurr_tracks)
data("storm_events")
head(storm_events)

#provides tracks for the hurricanes that occurred

library(dplyr)
library(tidyr)
storms_all <- hurr_tracks %>%
  select(storm_id) %>%
  distinct() %>%
  mutate(year = stringr::str_extract(storm_id, "-[0-9].+")) %>%
  filter(year <= 2018)
map_tracks((storms = storms_all$storm_id),
alpha = 0.5, plot_points = TRUE, color = "blue")




Gulf_Ariene_1993 <-map_tracks(storms = "Ariene-1993")

Gulf_Dean_1995 <-map_tracks(storms = "Dean-1995")

Gulf_Bret_1999 <-map_tracks(storms = "Bret-1999")

Gulf_Allison_2001 <-map_tracks(storms = "Allison-2001")

Gulf_Don_2011 <-map_tracks(storms = "Don-2011")

Gulf_Ingrid_2013 <-map_tracks(storms = "Ingrid-2013")

Gulf_Bill_2015 <-map_tracks(storms = "Bill-2015")

Gulf_Helene_2000 <-map_tracks(storms = "Helene-2000")


Gulf_1989 <- map_tracks(storms = c("Allison-1989", "Chantal-1989", "Jerry-1989"),
           alpha = 0.5, plot_points = TRUE, color = "blue")

Gulf_1998 <- map_tracks(storms = c("Charley-1998", "Frances-1998"),
         alpha = 0.5, plot_points = TRUE, color = "blue")

Gulf_2002 <- map_tracks(storms = c("Bertha-2002", "Fay-2002"),
           alpha = 0.5, plot_points = TRUE, color = "blue")

Gulf_2003 <- map_tracks(storms = c("Claudette-2003", "Erika-2003","Grace-2003"),
           alpha = 0.5, plot_points = TRUE, color = "blue")

Gulf_2005 <- map_tracks(storms = c("Emily-2005", "Rita-2005"),
           alpha = 0.5, plot_points = TRUE, color = "blue")

Gulf_2007 <- map_tracks(storms = c("Erin-2007", "Humberto-2007"),
           alpha = 0.5, plot_points = TRUE, color = "blue")

Gulf_2008 <- map_tracks(storms = c("Dolly-2008", "Eduoard-2008","Ike-2008"),
           alpha = 0.5, plot_points = TRUE, color = "blue")

Gulf_2010 <- map_tracks(storms = c("Alex-2010", "Hermine-2010"),
           alpha = 0.5, plot_points = TRUE, color = "blue")

Gulf_2017 <- map_tracks(storms = c("Cindy-2017", "Harvey-2017"),
           alpha = 0.5, plot_points = TRUE, color = "blue")













```{r}
n=20
data=data.frame(x=runif(n,-180,180),
                y=runif(n,-60,60),
                size = runif(n, 5, 20),
                category = factor(
                  sample(letters[1:5], n, replace = TRUE)
                  ),
                value = rnorm(n))
```

```{r, results='asis'}
data %>% 
  slice(1:10) %>% #show only 1:n rows
  kable(digits=2,align="c")%>% #make table and round to two digits
  kable_styling(bootstrap_options = 
                  c("striped", "hover", "condensed", "responsive")) #apply other formatting
```

Add any additional processing steps here.

# Results

\[\~200 words\]

Tables and figures (maps and other graphics) are carefully planned to convey the results of your analysis. Intense exploration and evidence of many trials and failures. The author looked at the data in many different ways before coming to the final presentation of the data.

Show tables, plots, etc. and describe them.

```{r, fig.width=6, fig.height=3, fig.cap="Map of completely random data"}
m <- leaflet(data) %>% 
  addTiles() %>% 
  addCircleMarkers(~x, ~y, radius = ~size,color = ~as.factor(category)) %>% 
  addPopups(~x[2], ~y[2], "Random popup")
m  # a map with the default OSM tile layer
```

```{r}
data %>% 
  ggplot(aes(x=x,y=y,col=category))+
  geom_point()
```

### Dygraphs Example

```{r}
library(dygraphs)
dygraph(nhtemp, main = "New Haven Temperatures") |> 
  dyRangeSelector(dateWindow = c("1920-01-01", "1960-01-01")) 
```

# Conclusions

\[\~200 words\]

Clear summary adequately describing the results and putting them in context. Discussion of further questions and ways to continue investigation.

# References

All sources are cited in a consistent manner
